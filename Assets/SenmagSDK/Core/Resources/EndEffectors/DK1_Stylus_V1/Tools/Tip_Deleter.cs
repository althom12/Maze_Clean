using System.Collections;
using System.Collections.Generic;
using UnityEngine;

using SenmagHaptic;

public class Tip_Deleter : MonoBehaviour
{
    // Start is called before the first frame update
	private Senmag_HapticCursor cursor;
	private GameObject target;
	private int targetValid;
	private Senmag_stylusControl stylusControl;
	private bool keyLatch;
	private bool active = false;
	public bool autoGenerated = false;
	private Tip_Deleter childTipDeleter;
	void Start()
    {
		active = true;
		if (GetComponent<Rigidbody>() == null)
		{
			if(GetComponentInParent<Rigidbody>() != null)
			{
				GetComponentInParent<Rigidbody>().gameObject.AddComponent<Tip_Deleter>();
				active = false;
			}
			//Destroy(this);
			return;
		}

		keyLatch = true;
		if(gameObject.GetComponentInParent<Senmag_stylusControl>() != null) stylusControl = gameObject.GetComponentInParent<Senmag_stylusControl>();
		else
		{
			UnityEngine.Debug.Log("Delete tool, unable to find stylus control object");
		}
	}

    // Update is called once per frame
    void Update()
    {
		if (active == false) return;

        if(targetValid > 0)
		{
			if(stylusControl != null)
			{
				if (stylusControl.Input_isHeld(Stylus_Action.leftClick))
				{
					if(keyLatch == false)
					{
						keyLatch = true;
						UnityEngine.Debug.Log("Delete: attempting delete...");
						if (target != null) Destroy(target);
					}
				}
				else keyLatch = false;
			}
			else
			{
				UnityEngine.Debug.Log("Delete: stylusControl not found...");
			}
			targetValid -= 1;

		}
    }

	private void OnCollisionStay(Collision collision)
	{
		if (active == false) return;

		if (collision.gameObject.GetComponent<Senmag_interactionTools>())
		{
			//UnityEngine.Debug.Log("Delete: new target");
			target = collision.gameObject;
			targetValid = 2;
		}
		if (collision.gameObject.GetComponentInChildren<Senmag_interactionTools>())
		{
			//UnityEngine.Debug.Log("Delete: new target");
			target = collision.gameObject;
			targetValid = 2;
		}
	}

	private void OnDestroy()
	{
		if(active == false) Destroy(GetComponentInParent<Tip_Deleter>());
	}
}
